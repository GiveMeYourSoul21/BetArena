const { PokerGame, User } = require('./server/models');

async function testSave() {
  try {
    console.log('üîç –¢–µ—Å—Ç—É—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è JSON –ø–æ–ª—ñ–≤...');
    
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–µ—Ä—à—É –¥–æ—Å—Ç—É–ø–Ω—É –≥—Ä—É
    const game = await PokerGame.findOne({ where: { status: 'playing' } });
    if (!game) {
      console.log('‚ùå –ê–∫—Ç–∏–≤–Ω–∞ –≥—Ä–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    console.log('üìä –ó–Ω–∞–π–¥–µ–Ω–∞ –≥—Ä–∞:', game.id);
    console.log('üìä –ì—Ä–∞–≤—Ü—ñ –¥–æ –∑–º—ñ–Ω–∏:');
    game.players.forEach((p, i) => {
      console.log(`  ${i}: hasActed=${p.hasActed}, bet=${p.currentBet}`);
    });
    
    // –ó–º—ñ–Ω—é—î–º–æ —Å—Ç–∞–Ω –ø–µ—Ä—à–æ–≥–æ –≥—Ä–∞–≤—Ü—è
    game.players[0].hasActed = true;
    game.players[0].currentBet = 100;
    
    console.log('üíæ –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ë–ï–ó markAsChanged...');
    await game.save();
    
    console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑ –±–∞–∑–∏...');
    const reloaded1 = await PokerGame.findByPk(game.id);
    console.log('üìä –ì—Ä–∞–≤—Ü—ñ –ø—ñ—Å–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ë–ï–ó markAsChanged:');
    reloaded1.players.forEach((p, i) => {
      console.log(`  ${i}: hasActed=${p.hasActed}, bet=${p.currentBet}`);
    });
    
    // –¢–µ–ø–µ—Ä –∑–º—ñ–Ω—é—î–º–æ —â–µ —Ä–∞–∑ –ó markAsChanged
    reloaded1.players[0].hasActed = false;
    reloaded1.players[0].currentBet = 200;
    
    console.log('üíæ –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –ó markAsChanged...');
    reloaded1.changed('players', true);
    await reloaded1.save();
    
    console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑ –±–∞–∑–∏...');
    const reloaded2 = await PokerGame.findByPk(game.id);
    console.log('üìä –ì—Ä–∞–≤—Ü—ñ –ø—ñ—Å–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ó markAsChanged:');
    reloaded2.players.forEach((p, i) => {
      console.log(`  ${i}: hasActed=${p.hasActed}, bet=${p.currentBet}`);
    });
    
    console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏–π');
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É:', error);
  }
  
  process.exit(0);
}

testSave(); 